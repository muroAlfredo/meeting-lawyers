nelmio_api_doc:
    areas: # to filter documented areas
        path_patterns:
            - ^/api(?!/doc$) # Accepts routes under /api except /api/doc

    documentation:
        info:
            title: Work Entry App
            description: Work Entry App Api Rest
            version: 1.0.0

        components:
            parameters:
                id:
                    in: path
                    name: id
                    schema:
                        type: integer
                        minimum: 1
                    required: true
                limit:
                    in: query
                    name: limit
                    schema:
                        type: integer
                        minimum: 10
                        maximum: 100
                        default: 50
                    description: The numbers of items to return.
                offset:
                    in: query
                    name: offset
                    schema:
                        type: integer
                        minimum: 0
                    description: The number of items to skip before starting to collect the result set.
            responses:
                400BadRequest:
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestExceptionResponse'
                404UserNotFound:
                    description: Not Found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundExceptionResponse'
                            example:
                                code: 404
                                message: "[UserNotFoundException] Entity of type 'User' for ID '3000' was not found!"
                404WorkEntryNotFound:
                    description: Not Found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundExceptionResponse'
                            example:
                                code: 404
                                message: "[WorkEntryNotFound] Entity of type 'WorkEntry' for ID '3000' was not found!"
            schemas:
                CreateUserDto:
                    required:
                        - name
                        - email
                UpdateUserDto:
                    required:
                        - name
                        - email
                CreateWorkEntryDto:
                    required:
                        - userId
                        - startDate
                UpdateWorkEntryDto:
                    required:
                        - userId
                        - startDate
                BadRequestExceptionResponse:
                    type: object
                    properties:
                        code:
                            type: integer
                            example: 400
                        message:
                            type: string
                            example: "Expected a value to be a valid e-mail address. Got: example.com"
                        class:
                            type: string
                            example: "Webmozart\\Assert\\InvalidArgumentException"
                    required:
                        - code
                        - message
                        - class
                NotFoundExceptionResponse:
                    type: object
                    properties:
                        code:
                            type: integer
                            example: 404
                        message:
                            type: string
                            example: "[EntityNotFoundException] Entity of type 'Entity' for ID '200' was not found!"
                        class:
                            type: string
                            example: "App\\Exception\\UserNotFoundException"
                    required:
                        - code
                        - message
                        - class
    models:
        names:
            #User
            - { alias: CreateUserDto, type: App\Dto\User\CreateUserDto }
            - { alias: UpdateUserDto, type: App\Dto\User\UpdateUserDto }
            - { alias: GetUserResponse, type: App\Response\User\GetUserResponse }
            - { alias: GetUsersCollectionResponse, type: App\Response\User\GetUsersCollectionResponse }
            #WorkEntry
            - { alias: CreateWorkEntryDto, type: App\Dto\WorkEntry\CreateWorkEntryDto }
            - { alias: UpdateWorkEntryDto, type: App\Dto\WorkEntry\UpdateWorkEntryDto }
            - { alias: GetWorkEntryResponse, type: App\Response\WorkEntry\GetWorkEntryResponse }
            - { alias: GetWorkEntriesCollectionResponse, type: App\Response\WorkEntry\GetWorkEntriesCollectionResponse }